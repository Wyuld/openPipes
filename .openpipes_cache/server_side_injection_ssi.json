{
  "title": "Server Side Injection (SSI)",
  "cvssv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
  "description": "SSI (Server-Side Includes) são diretivas presentes em aplicações web usadas para alimentar uma página HTML com conteúdo dinâmico. São semelhantes aos CGIs, exceto que os SSIs são usados para executar algumas ações antes que a página atual seja carregada ou enquanto ela está sendo exibida. Para fazer isso, o servidor web analisa os SSIs antes de entregar a página ao usuário. O ataque de injeção SSI permite atacar uma aplicação web injetando scripts em páginas HTML ou executando código arbitrário remotamente. Ele pode ser explorado por meio da manipulação de diretivas SSI em uso na aplicação ou forçar seu uso injetando novas diretivas por meio de campos de entrada do usuário. É possível verificar se a aplicação está validando corretamente os dados nos campos de entrada inserindo caracteres que são usados nas diretivas SSI, como: &lt; ! # = / . &quot; -&gt; e [a-zA-Z0-9] Outra maneira de descobrir se o aplicativo é potencialmente vulnerável é verificar a presença de páginas com extensões .stm, .shtm e .shtml. No entanto, a ausência dessas páginas não significa que o aplicativo esteja protegido contra ataques SSI. Em ambos os casos, o ataque só será bem-sucedido se o servidor web permitir a execução do SSI sem a devida validação prévia. Se isso ocorrer, poderá ser possível acessar e manipular arquivos e processos do sistema com a permissão do proprietário do processo do servidor web.",
  "observation": "Confidencialidade: Leitura de dados do aplicativo: O código injetado pode acessar dados/arquivos restritos. Controle de acesso: Mecanismo de proteção de bypass: Em alguns casos, o código injetável controla a autenticação; isso pode levar a uma vulnerabilidade remota. Controle de acesso: obtenha privilégios ou assuma identidade: o código injetado pode acessar recursos que o invasor está diretamente impedido de acessar. Outros: Executar código ou comandos não autorizados: Ataques de injeção de código podem levar à perda de integridade dos dados em quase todos os casos, pois os dados do plano de controle injetados são sempre incidentais à recuperação ou gravação de dados. Além disso, a injeção de código pode frequentemente resultar na execução de código arbitrário. Não repúdio: ocultar atividades: muitas vezes, as ações executadas pelo código de controle injetado não são registradas. Integridade: Modifique os dados do aplicativo: As comunicações entre os componentes podem ser modificadas de maneiras inesperadas. Comandos inesperados podem ser executados, ignorando outros mecanismos de segurança. Os dados recebidos podem ser mal interpretados.",
  "remediation": "Dados controláveis pelo usuário não devem, sempre que possível, ser incorporados por aplicativos em páginas renderizadas para diretivas SSI. Geralmente, existem maneiras alternativas mais seguras de implementar a funcionalidade necessária. Se isso for considerado impraticável, os dados devem ser rigorosamente validados. O ideal é utilizar uma lista branca de valores específicos aceitáveis. Na ausência dela, somente strings alfanuméricas curtas serão aceitas. Quaisquer dados adicionais, incluindo qualquer metacaractere SSI em potencial, devem ser excluídos da entrada.",
  "references": [
    "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/08-Testing_for_SSI_Injection",
    "https://owasp.org/www-community/attacks/Server-Side_Includes_(SSI)_Injection#:~:text=The%20Server%2DSide%20Includes%20attack,use%20through%20user%20input%20fields.",
    "- http://httpd.apache.org/docs/current/howto/ssi.html",
    "https://cwe.mitre.org/data/definitions/96.html",
    "https://cwe.mitre.org/data/definitions/116.html",
    "https://cwe.mitre.org/data/definitions/159.html"
  ]
}
