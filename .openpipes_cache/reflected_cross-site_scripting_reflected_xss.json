{
  "title": "Reflected Cross-site Scripting (reflected XSS)",
  "cvssv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:N",
  "description": "Por meio de um ataque de Cross-Site Scripting (XSS), um invasor pode inserir um código malicioso que é executado no navegador da vítima, assumir o controle do navegador e usá-lo para acessar credenciais, dados confidenciais ou dados de sessão do aplicativo afetado. Para que o Cross-Site Scripting refletido funcione, o invasor deve estar em contato direto com a vítima para enviar o código malicioso que será executado no navegador da vítima como parte do aplicativo.",
  "observation": "Confidencialidade: Leitura de Dados do Aplicativo: O ataque mais comum realizado com cross-site scripting envolve a divulgação de informações armazenadas em cookies do usuário. Normalmente, um usuário mal-intencionado cria um script do lado do cliente que, quando analisado por um navegador, realiza alguma atividade (como enviar todos os cookies do site para um determinado endereço de e-mail). Esse script será carregado e executado por cada usuário que visita o site. Como o site que solicita a execução do script tem acesso aos cookies em questão, o script malicioso também tem. Disponibilidade: Executar códigos ou comandos não autorizados: Em algumas circunstâncias, pode ser possível executar código arbitrário no computador de uma vítima quando o cross-site scripting é combinado com outras falhas. Controle de Acesso: Leitura de Dados de Aplicativos: A consequência de um ataque XSS é a mesma, independentemente de ser armazenado ou refletido. A diferença está em como o payload chega ao servidor. O XSS pode causar uma variedade de problemas para o usuário final, cuja gravidade varia de um incômodo ao comprometimento total da conta. Algumas vulnerabilidades de cross-site scripting podem ser exploradas para manipular ou roubar cookies, criar solicitações que podem ser confundidas com as de um usuário válido, comprometer informações confidenciais ou executar código malicioso nos sistemas do usuário final para uma variedade de propósitos nefastos. Outros ataques prejudiciais incluem a divulgação de arquivos do usuário final, a instalação de programas de Cavalo de Troia, o redirecionamento do usuário para outra página ou site, a execução de controles &quot;Active X&quot; (no Microsoft Internet Explorer) de sites que o usuário considera confiáveis e a modificação da apresentação do conteúdo.",
  "remediation": "Prevenir ataques de Cross-site Scripting (XSS) não é trivial, dependendo da complexidade do aplicativo e de como ele manipula dados controláveis pelo usuário e do tipo de vulnerabilidade de Cross-site Scripting (XSS). No entanto, existem certos princípios gerais que as seguintes medidas devem implementar: Filtrar entrada de dados: trate todas as entradas do usuário como não confiáveis, filtre o mais estritamente possível com base no que é esperado ou é uma entrada válida. Use criptografia: com o uso de uma técnica de criptografia apropriada, evite que ele seja interpretado como conteúdo legítimo. Use cabeçalhos de resposta seguros: os navegadores aceitam diferentes tipos de cabeçalhos para evitar ataques de Cross-site Scripting (XSS), como uma Política de Segurança de Conteúdo (CSP) e &#39;X-XSS-Protection&#39;. Proteger cookies: É necessário mitigar o possível acesso a cookies de sessão com o sinalizador &quot;HttpOnly&quot;. Este sinalizador desabilita o acesso a cookies por meio de JavaScript do lado do cliente.",
  "references": [
    "https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/01-Testing_for_Reflected_Cross_Site_Scripting",
    "https://owasp.org/www-community/attacks/xss/",
    "https://cwe.mitre.org/data/definitions/79.html"
  ]
}
